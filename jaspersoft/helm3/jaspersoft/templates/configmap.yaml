apiVersion: v1
kind: ConfigMap
metadata:
  name: config-map-dependency-default-success-token-value
  namespace: {{ .Values.namespace }}
  labels:
    name: {{ .Values.namespace }}
    app: {{ template "jaspersoft.name" . }}
    chart: {{ template "jaspersoft.chart" . }}
    heritage: {{ .Release.Service }}
    release: {{ .Release.Name }}
    app.kubernetes.io/managed-by: Helm
  annotations:
    meta.helm.sh/release-name: {{ .Release.Name }}
    meta.helm.sh/release-namespace: {{ .Values.namespace }}
data:
  {{- if .Values.tokens.repeatability }}
  "CLRT_JSFT_FRESH_DB_STATUS_TOKEN": {{ .Values.tokens.repeatability.freshDbToken | default 1556891768860 | quote }}
  "CLRT_JSFT_UPGRADE_DB_STATUS_TOKEN": {{ .Values.tokens.repeatability.upgradeDbToken | default 1556891768860 | quote }}
  "CLRT_JSFT_PATCH_DB_STATUS_TOKEN": {{ .Values.tokens.repeatability.patchDbToken | default 1556891768860 | quote }}
  {{- else }}
  "CLRT_JSFT_FRESH_DB_STATUS_TOKEN": "1556891768860"
  "CLRT_JSFT_UPGRADE_DB_STATUS_TOKEN": "1556891768860"
  "CLRT_JSFT_PATCH_DB_STATUS_TOKEN": "1556891768860"
  {{- end }}
  "CLRT_OPERATIONS_STATUS_TOKEN": {{ now | unixEpoch | toString | quote }}
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: jsft-config
  namespace: {{ .Values.namespace }}
  labels:
    name: {{ .Values.namespace }}
    app: {{ template "jaspersoft.name" . }}
    chart: {{ template "jaspersoft.chart" . }}
    heritage: {{ .Release.Service }}
    release: {{ .Release.Name }}
    app.kubernetes.io/managed-by: Helm
  annotations:
    meta.helm.sh/release-name: {{ .Release.Name }}
    meta.helm.sh/release-namespace: {{ .Values.namespace }}
    description: Configuration Map for JSFT properties
data:
  jsft.properties: |
    JS_DB_TYPE={{ .Values.db.vendor }}
    JS_DB_HOST={{ .Values.db.host }}
    JS_DB_PORT='{{ .Values.db.port | default 5432 }}'
    {{- if (eq .Values.db.vendor "oracle") }}
    JS_DB_ORCL_TYPE={{ .Values.db.oracle.type }}
    JS_ORCL_SID_SRVNAME={{ .Values.db.oracle.sidOrServiceName }}
    {{- end }}
    {{- if (eq .Values.db.vendor "sqlserver") }}
    {{- if (eq .Values.db.sqlserver.namedInstance true) }}
    JS_IS_NAMED_INSTANCE='{{ .Values.db.sqlserver.namedInstance }}'
    JS_DB_SQLSERVER_INSTANCE_NAME={{ .Values.db.sqlserver.instanceName }}
    {{- end }}
    {{- end }}
    JS_DB_NAME={{ .Values.db.databaseName }}
    JS_MAIL_SETUP='{{ .Values.mail.setup }}'
    JS_MAIL_HOST={{ .Values.mail.host }}
    JS_MAIL_PORT='{{ .Values.mail.port }}'
    JS_MAIL_PROTOCOL={{ .Values.mail.protocol }}
    JS_MAIL_SENDER_FROM={{ .Values.mail.senderFrom }}
    JS_DPY_ENV={{ .Values.installConfig.deploymentType }}
    JS_DPY_ENV_COMPLIANCE={{ .Values.installConfig.compliance }}
    JS_LOG_HOST={{ .Values.installConfig.logHost }}
    JS_INSTALL_METHOD={{ .Values.installConfig.installMethod }}
    JS_INSTALL_MODE={{ .Values.installConfig.installMode }}
    JS_INSTALL_MODE_TYPE=deploy-webapp
    {{- if and (eq .Values.deploymentType "pipeline") (eq .Values.platform "ose") }}
    {{- if (eq .Values.route.secure "enable") }}
    JS_LB_URL_DEPLOYMENT='https://{{ .Values.namespace }}.{{ .Values.route.externalHostName }}/reportservice'
    {{- else }}
    JS_LB_URL_DEPLOYMENT='http://{{ .Values.namespace }}.{{ .Values.route.externalHostName }}/reportservice'
    {{- end }}
    {{- end }}
    {{- if (eq .Values.platform "k8s") }}
    JS_LB_URL_DEPLOYMENT='{{ template "set.app.ingress.protocol" . }}{{ .Values.namespace }}.{{ .Values.ingress.app.dnsName }}/reportservice'
    {{- end }}
    {{- if and (eq .Values.deploymentType "pipeline") (eq .Values.platform "gke") }}
    JS_LB_URL_DEPLOYMENT='{{ template "set.app.ingress.protocol" . }}{{ .Values.namespace }}.{{ .Values.ingress.app.dnsName }}/reportservice'
    {{- end }}
    JS_EHCACHE_CONFIG={{ .Values.installConfig.ehCacheConfig }}
    JS_DEPLOYMENT_ENV_TYPE={{ .Values.installConfig.envType }}
    {{- if (not .Values.activeMQ.isCluster) }}
    ACTIVEMQ_PROVIDER_HOST_PORT='activemq-broker-service:61616'
    {{- else }}
    ACTIVEMQ_REPLICA_COUNT={{ .Values.activemqDeployment.replicas | default 2 }}
    {{- end }}
    JS_UPGRADE_FROM_VERSION={{ .Values.installConfig.upgradeFromVersion | default "7.1.3" }}
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: filebeat-config
  namespace: {{ .Values.namespace }}
  labels:
    name: {{ .Values.namespace }}
    app: {{ template "jaspersoft.name" . }}
    chart: {{ template "jaspersoft.chart" . }}
    heritage: {{ .Release.Service }}
    release: {{ .Release.Name }}
    app.kubernetes.io/managed-by: Helm
  annotations:
    meta.helm.sh/release-name: {{ .Release.Name }}
    meta.helm.sh/release-namespace: {{ .Values.namespace }}
data:
  {{- if .Values.filebeatDeployment.uuid }}
  .filebeat-marker: |
    {{ .Values.filebeatDeployment.uuid }}
  {{- end }}
  filebeat.yml: |-
    filebeat.inputs:
    - type: log
      paths:
        - /opt/logs/*catalina.*\.log
        - /opt/logs/*localhost.*\.log
      multiline.pattern: '[0-9]{2}[\-]+[[:word:]]+[\-]+[0-9]{4}'
      multiline.negate: true
      multiline.match: after
      {{- template "filebeat.input.configurations" . }}
    - type: log
      paths:
        - /opt/logs/*startup.log
        - /opt/logs/*dependency.log
        - /opt/logs/*config-handler.log
        - /opt/logs/container/logpurge/*.log
      multiline.pattern: '^[0-9]{4}-[0-9]{2}-[0-9]{2}'
      multiline.negate: true
      multiline.match: after
      {{- template "filebeat.input.configurations" . }}
    - type: log
      paths:
        - /opt/logs/*access_log.*
      {{- template "filebeat.input.configurations" . }}
    - type: log
      paths:
        - /opt/logs/*-jasperserver.log
      multiline.pattern: '^(SYS|WARN|ERROR|DEBUG|INFO|FATAL)[[:space:]]+[0-9]{4}-[0-9]{2}-[0-9]{2}'
      multiline.negate: true
      multiline.match: after
      {{- template "filebeat.input.configurations" . }}
    {{- template "filebeat.configurations" . }}
    fields:
      {{- range $key, $val := .Values.filebeatDeployment.fields }}
      {{ $key }}: {{ $val }}
      {{- end}}
    fields_under_root: true

    # Defines if the HTTP endpoint is enabled.
    http.enabled: true
    # The HTTP endpoint will bind to this hostname or IP address. It is recommended to use only localhost.
    http.host: localhost
    # Port on which the HTTP endpoint will bind. Default is 5066.
    http.port: 5066
    output.logstash:
      hosts: ["${LOGSTASH_HOST}:${LOGSTASH_PORT}"]
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: filebeat-config-activemq
  namespace: {{ .Values.namespace }}
  labels:
    name: {{ .Values.namespace }}
    app: {{ template "jaspersoft.name" . }}
    chart: {{ template "jaspersoft.chart" . }}
    heritage: {{ .Release.Service }}
    release: {{ .Release.Name }}
    k8s-app: filebeat
    app.kubernetes.io/managed-by: Helm
  annotations:
    meta.helm.sh/release-name: {{ .Release.Name }}
    meta.helm.sh/release-namespace: {{ .Values.namespace }}
data:
  filebeat.yml: |-
    filebeat.inputs:
    - type: log
      paths:
        - /usr/share/activemq/data/*.log
      {{- if (eq .Values.deploymentType "pipeline") }}
      document_type: kube-logs
      {{- end }}
      multiline.pattern: '^[0-9]{4}-[0-9]{2}-[0-9]{2}'
      multiline.negate: true
      multiline.match: after

    fields:
      pod_name: ${POD_NAME}
      namespace: ${POD_NAMESPACE}
      main_container_id: ${MAIN_CONTAINER_ID}
      main_container_name: ${MAIN_CONTAINER_NAME}
      contains_metadata: "true"
      {{- range $key, $val := .Values.filebeatDeployment.fields }}
      {{ $key }}: {{ $val }}
      {{- end}}
    fields_under_root: true

    # Defines if the HTTP endpoint is enabled.
    http.enabled: true
    # The HTTP endpoint will bind to this hostname or IP address. It is recommended to use only localhost.
    http.host: localhost
    # Port on which the HTTP endpoint will bind. Default is 5066.
    http.port: 5066
    output.logstash:
      hosts: ["${LOGSTASH_HOST}:${LOGSTASH_PORT}"]
---
{{- if (.Values.activeMQ.isCluster) }}
apiVersion: v1
kind: ConfigMap
metadata:
  name: validate-master-slave-activemq
  namespace: {{ .Values.namespace }}
  labels:
    name: {{ .Values.namespace }}
    app: {{ template "jaspersoft.name" . }}
    chart: {{ template "jaspersoft.chart" . }}
    heritage: {{ .Release.Service }}
    release: {{ .Release.Name }}
    app.kubernetes.io/managed-by: Helm
  annotations:
    meta.helm.sh/release-name: {{ .Release.Name }}
    meta.helm.sh/release-namespace: {{ .Values.namespace }}
    description: Configuration Map to validate master slave configuration
data:
  validate-master-slave-activemq.sh: |
    #!/bin/bash
    a=0;
    while [[ $a -lt $ACTIVEMQ_REPLICA_COUNT ]];
    do
     if [[ `nc -vz -w10 activemq-${a}.activemq-broker-headless-service 61616;echo $?` -eq 0 ]]; then
        echo "ActiveMQ broker port connection is now availed....!!!";
        exit 0;
     fi
     a=`expr $a + 1`;
    done
    exit 1;
{{- end }}
